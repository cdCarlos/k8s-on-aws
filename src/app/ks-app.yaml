apiVersion: apps/v1
kind: Deployment
metadata:
  name: ks-app
  labels:
    run: ks-app
spec:
  replicas: 1
  selector:
    matchLabels:
      project: k8s
      service: fundamentals
      version: "0.1"
  template:
    metadata:
      name: ks-app
      labels:
        project: k8s
        service: fundamentals
        version: "0.1"
    spec:
      containers:
        - name: demo-app
          image: k8s-on-aws:latest
          imagePullPolicy: Always
          tty: true
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ks-app
  labels:
    project: k8s
    service: fundamentals
    version: "0.1"
spec:
  type: NodePort
  selector:
    project: k8s
    service: fundamentals
    version: "0.1"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      name: http
